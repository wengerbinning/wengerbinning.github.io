C的数据结构丰富，包含整数、浮点数、布尔、字符、指针、数据、结构、联合等多种类型的对象，可以满足不同场景中的应用。

## 数据对象

数据对象即我们表示的数据本身。数据对象一般有存储地址、数据大小、数据内容、数据类型等属性。数据的左值是数据对象本身，数据的右值是数据对象的数据内容。根据数据对象的特征可以分为数据变量、数据常量。

### 数据变量

数据变量是数据内容可变的数据对象。一般根据作用域可以分为局部变量与全局变量；根据限定词可以有自动变量、静态变量、外部变量、寄存器变量四类。

* 自动变量：
* 静态变量：
* 外部变量：
* 寄存器变量：

#### 全局变量

全局变量是作用域为程序内部可访问的数据变量。全局变量在虚拟内存中是存储在数据段。全局变量会默认初始化。

#### 局部变量

局部变量是作用域为函数内部可访问的数据变量。局部变量在虚拟内存中是存储在用户栈。局部变量默认不会初始化。

### 数据常量

数据常量是只读的数据对象，当创建之后不能被修改。常量可以分为字面常量与字符常量。

#### 字面常量

字面常量是直接使用的常量对象。

```c
// 整数类型的字面常量。
12; 12U; 0xFF; 12L; ffH; 012; 0b10101;
// 字符类型的字面常量。
'a'; "string";
// 布尔类型常量。
true; false;
```

当然在C语言中除了直接只用字面常量外，也可以使用宏定义来将字面常量定义为宏常量，方面程序的维护。

* 宏常量：

  ```c
  // 定义圆周率常量。
  #define PI 3.1415926
  ```

#### 字符常量

字符常量是我们使用const定义的常量。

* const常量：

  ```c
  const int NUM = 10;



### 类型定义

C语言除了以上的基础类型，还支持使用typedef定义一个新的类型。

```c
// typedef定义的一般格式，定义一个新类型size，类型与unsigned int一样。
typedef unsigned int size

// 定义一个函数指类型,该类型是一个函数指针类型。
typedef int (*type_name)(int a, int b);
```



### 时间

时间有各类格式，例如时间戳、ISO-8601时间格式、GMT时间格式，其内容包含（年、月、日、星期、小时、分钟、秒）


闰秒（或称跳秒）是对协调世界时作出加一秒或减一秒的调整，用来调整世界时间。

* 时间戳（timestamp）是数字签名技术产生的时间数据格式，根据使用场景有不同的时间戳。

  * unix时间戳是自1970年1月1日开始所经过的秒数。
  *

* ISO8601时间格式：<yyyy>-<MM>-<dd>T<HH>:<mm>:<ss>.<SSS><XXX>
* GMT时间格式：<EEE>,<d> <MMM> <yyyy> <HH>:<mm>:<ss> GMT


# 系统调用

系统调用是C语言调用系统内部的程序或者其他编程语言执行的过程。

## shell调用

* popen & pclose 是通过fork及invoke创建一个子进程执行系统程序，并通过管道的方式来返回执行的结果，在popen中数据除执行的程序之外还需要一个字符参数来指定管道的方向，该管道的数据流是单向的；w表示从程序输入数据到子进程，r表示读取子进程数据到程序中。

* system是一个只能执行程序，不能进行交互的函数方法。

systemct(const char * command)


中间件、模块库



* [调试](./debug.md)
