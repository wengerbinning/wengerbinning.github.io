##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration

server {
	##
	server_name singapore.huawei.cloud.wengerbinning.xyz;

	listen 80 default_server;
	listen [::]:80 default_server;

	listen 443 default_server ssl;
	listen [::]:443 default_server ssl;

	##
	index index.html index.nginx-debian.html;
	root /var/www;

	## SSL configuration
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
	ssl_certificate "certs/singapore.huawei.cloud.wengerbinning.xyz_server.crt";
	ssl_certificate_key "certs/singapore.huawei.cloud.wengerbinning.xyz_server.key";
	ssl_session_cache shared:SLL:10m;
	ssl_session_timeout 10m;
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	##################
	# Index Location #
	##################

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	##################
	# Files Location #
	##################

	## share
	location /share/ {
		proxy_pass http://127.0.0.1:8000;
	}

	## released
	location /released/ {
		proxy_pass http://127.0.0.1:8000;
	}

	##################
	# Proxy Location #
	##################

	## V2ray Vmess
	location /vpn/v2ray/vmess {
		proxy_redirect off;
		proxy_pass http://127.0.0.1:6012;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $http_host;
	}

	## V2ray Vless
	location /vpn/v2ray/vless {
		proxy_redirect off;
		proxy_pass http://127.0.0.1:6013;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $http_host;
	}

	## pass PHP scripts to FastCGI server
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}
}

server {
	##
	server_name archlinux.wengerbinning.xyz;

	listen 443 ssl;
	listen [::]:443 ssl;

	##
	index index.html;
	root /srv/released/archlinux;
	autoindex on;

	## SSL configuration
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
	ssl_certificate "certs/archlinux.wengerbinning.xyz_server.crt";
	ssl_certificate_key "certs/archlinux.wengerbinning.xyz_server.key";
	ssl_session_cache shared:SLL:10m;
	ssl_session_timeout 10m;
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	##################
	# Index Location #
	##################

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
}